name: Main pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install pipenv
      run: |
        curl https://pyenv.run | bash
      shell: bash

    - name: Install pipenv
      run: |
        pip install pipenv
      shell: bash

    - name: Install dependencies with pipenv
      run: |
        pipenv install --deploy --ignore-pipfile
        pipenv install setuptools
      shell: bash
    - name: Extract version number
      id: version_number
      run: echo "VERSION_NUMBER=1.0.${{github.run_number}}" >> $GITHUB_OUTPUT
    - name: Update version in setup.py
      run: >-
        echo 'version is ${{ steps.version_number.outputs.VERSION_NUMBER }}' &&
        sed -i 's/{{VERSION_PLACEHOLDER}}/1.0.${{github.run_number}}/g' setup.py
    - name: Install Compose
      uses: ndeloof/install-compose-action@v0.0.1
      with:
        version: v2.1.0 # defaults to 'latest'
        legacy: true    # will also install in PATH as `docker-compose`
        run: docker-compose --version
    - name: Start containers
      run: ~/.docker/cli-plugins/docker-compose -f "docker-compose.yml" up -d --force-recreate
    - name: Run tests
      run: pipenv run python -m coverage run -m unittest discover tests
    - name: Build Source and Wheel Distributions
      run: |
        pipenv run python setup.py sdist bdist_wheel
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    - name: Stop containers
      if: always()
      run: ~/.docker/cli-plugins/docker-compose down
    - name: Publish Distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_TOKEN }}
